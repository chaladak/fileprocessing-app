pipeline {
    agent {
        label 'docker-agent'
    }

    environment {
        DOCKER_HUB = "docker.io"
        DOCKER_REGISTRY = "achodak"
        DOCKER_CREDS = credentials('docker-credentials-id')
        PROJECT_NAME = "fileprocessing"
        GIT_COMMIT_SHORT = sh(script: "git rev-parse --short HEAD", returnStdout: true).trim()
        TAG = "${env.BUILD_NUMBER}-${GIT_COMMIT_SHORT}"
    }

    stages {
        stage('Build Docker Images') {
            steps {
                container('docker') {
                    script {    
                        withCredentials([usernamePassword(credentialsId: 'docker-credentials-id', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
                            sh "docker login -u ${USERNAME} -p ${PASSWORD} ${DOCKER_HUB}"
                        }
                        
                        sh "docker build --network=host -t ${DOCKER_REGISTRY}/${PROJECT_NAME}-api:${TAG} ./api_service"
                        sh "docker build --network=host -t ${DOCKER_REGISTRY}/${PROJECT_NAME}-processor:${TAG} ./processor_service"
                        sh "docker build --network=host -t ${DOCKER_REGISTRY}/${PROJECT_NAME}-notifier:${TAG} ./notification_service"
                    }
                }
            }
        }
        /*
        stage('Push Docker Images') {
            steps {
                container('docker') {
                    script {
                        withCredentials([usernamePassword(credentialsId: 'docker-credentials-id', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
                            sh "echo ${PASSWORD} | docker login ${DOCKER_HUB} -u ${USERNAME} --password-stdin"
                        }
                        
                        sh "docker push ${DOCKER_REGISTRY}/${PROJECT_NAME}-api:${TAG}"
                        sh "docker push ${DOCKER_REGISTRY}/${PROJECT_NAME}-processor:${TAG}"
                        sh "docker push ${DOCKER_REGISTRY}/${PROJECT_NAME}-notifier:${TAG}"
                    }
                }
            }
        }
*/
        stage('Checkout Infrastructure Repo') {
            steps {
                container('docker') {
                    script {
                        // Clone the infrastructure repository
                        sh '''
                            git clone https://github.com/chaladak/fileprocessing-infra.git
                        '''
                    }
                }
            }
        }
        
        stage('Update Image Tags in Infrastructure Repo') {
            steps {
                container('docker') {
                    script {
                        // Install necessary tools
                        sh '''
                            apk add --no-cache git bash curl
                            curl -LO "https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64"
                            chmod +x yq_linux_amd64
                            mv yq_linux_amd64 /usr/local/bin/yq

                            curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh" | bash
                            chmod +x kustomize
                            mv kustomize /usr/local/bin/
                            ln -s /usr/local/bin/kustomize /usr/bin/kustomize
                        '''

                        withCredentials([sshUserPrivateKey(credentialsId: 'infra-repo-key', keyFileVariable: 'SSH_KEY')]) {
                        sh '''
                            chmod 600 $SSH_KEY
                            eval "$(ssh-agent -s)"
                            ssh-add $SSH_KEY
                            cd fileprocessing-infra/deploy/overlays/dev
                            git remote set-url origin git@github.com:chaladak/fileprocessing-infra.git
                            mkdir -p ~/.ssh
                            echo -e "Host *\n\tStrictHostKeyChecking no\n" > ~/.ssh/config
                            kustomize edit set image achodak/fileprocessing-api:${TAG}
                            kustomize edit set image achodak/fileprocessing-processor:${TAG}
                            kustomize edit set image achodak/fileprocessing-notifier:${TAG}
                            git add kustomization.yaml
                            git commit -m "Update image tags to ${TAG} [skip ci]"
                            git push
                        '''
                        }

                    }
                }
            }
        }
    }
    
    post {
        always {
            // Clean workspace
            cleanWs()
        }
        
        success {
            echo "Build and push completed successfully!"
        }
        
        failure {
            echo "Build and push failed!"
        }
    }
}